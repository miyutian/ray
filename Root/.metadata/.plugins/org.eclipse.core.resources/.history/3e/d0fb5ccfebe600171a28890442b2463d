package com;


import java.io.IOException;

import org.osgeo.proj4j.BasicCoordinateTransform;
import org.osgeo.proj4j.CRSFactory;
import org.osgeo.proj4j.CoordinateReferenceSystem;
import org.osgeo.proj4j.CoordinateTransform;
import org.osgeo.proj4j.ProjCoordinate;

/**
 * 使用Jsoup解析url
 * @tag：url ：http://sex.guokr.com/
 * Created by monster on 2015/12/11.
 */
public class CodeTest {
    public static void main(String[] args) throws ParseException, IOException{
 
    }
    	private String[] transform(double y, double x) {
    		 /* for more details please refer to: 
    		    1) https://github.com/OSGeo/proj.4/wiki/GenParms#units 

    		    2) https://gis.stackexchange.com/questions/206050/convert-from-epsg27700-to-latitude-and-longitude 

    		    3) https://gis.stackexchange.com/questions/199087/projection-from-epsg4326-to-epsg4258 

    		    4) https://trac.osgeo.org/proj4j 

    		 */
    		try {
    			CRSFactory crsFactory = new CRSFactory();
    			CoordinateReferenceSystem sourceSRS = crsFactory.createFromName("EPSG:2263");
    			CoordinateReferenceSystem targetSRS = crsFactory.createFromName("EPSG:4326");
    			CoordinateTransform transformation = new BasicCoordinateTransform(sourceSRS, targetSRS);
    			ProjCoordinate result = new ProjCoordinate();
    			ProjCoordinate input = new ProjCoordinate(y, x);
    			transformation.transform(input, result);
                String[] coor = new String[2];
                coor[0] = result.y + "";
                coor[1] = result.x + "";
                return coor;
    		} catch(Exception e) {
    			//LOGGER.debug("Transform failed: " + e.getMessage());
    		}			
    		return null;
    	}

    }
}